=== Calculate curvature and slope

This step requires http://lsdtopotools.github.io/[LSDTopoTools] software.
If you are using the University of Edinburgh GeoScience servers, everything you need is already installed.
If you aren't working on our servers, you will need to make sure the essential software is installed.
See the https://github.com/LSDtopotools/LSDTT_book[LSDTopoTools documentation] for details.

Before you do this, you might be wondering: Why we don't use ArcGIS to calculate curvature and slope?
The short answer is that the curvature and slope function in ArcGIS aren't very good.
The longer answer is that landscapes contain quite a lot of topographic noise and if we want to see through this noise to get at emergent topographic patterns, some degree of spatial averaging is required.
Our curvature and slope routines do this by using a neighborhood of topographic data rather than just the closest pixels to calculate curvature and slope.
If you with to read more about this, see http://www.researchgate.net/publication/230821568_Using_hilltop_curvature_to_derive_the_spatial_distribution_of_erosion_rates[Hurst et al 2012]
and http://blogs.uoregon.edu/jroering/files/2014/11/2010RoeringTreesSoilEPSL2010-2fwpdvq.pdf[Roering et al. 2010].


.Influence of window size when calculating topographic curvature from gridded elevation data of a soil-mantled hillslope. (a) Standard deviation and (b) mean value of curvature for a sample hilltop known to be eroding at 40.5 mm kyr^-1^. A scaling break occurs at L = 12 m separating the signal of pit mound topography from that of hillslope morphology. Curvature values are consistent up to L = 32 m at which point adjacent valley bottoms start to influence curvature. From Hurst et al. (2012).
image::images/Length_scale.png[width=200]


==== Get the LSDTopoTools software

Okay, lets get the software for calculating slope and curvature.

. Go to your second terminal window. Navigate to the folder called `Source_Code`:
+
[source,console]
----
$ cd /home/HillslopeAnalysis/SourceCode
----
+
IMPORTANT: You directory might be located somewhere else. The `cd` command needs to point to the correct directory.
+
. Now we are going to clone some software into this folder using a program called https://git-scm.com/[Git].
You don't need to worry too much about what this software is doing. All you need to do is type this:
+
[source,console]
----
$ git clone https://github.com/LSDtopotools/LSDTopoTools_AnalysisDriver.git
----
+
. This will download a bunch of stuff into a new directory called *LSDTopoTools_AnalysisDriver*.
Go into this folder and check out what is there:
+
NOTE: It is rather annoying to type out `LSDTopoTools_AnalysisDriver`.
Luckily, in Linux, you can start typing a directory and filename and hit `tab` and it will autocomplete.
Once you realize this you will massively speed up your work.
I haven't typed out a complete directory or file name in years.
+
[source,console]
----
$ cd LSDTopoTools_AnalysisDriver
$ ls
Analysis_driver        LSDIndexChannel.hpp                LSDRaster.hpp
LSDAnalysisDriver.cpp  LSDIndexRaster.cpp                 LSDShapeTools.cpp
LSDAnalysisDriver.hpp  LSDIndexRaster.hpp                 LSDShapeTools.hpp
LSDChannel.cpp         LSDJunctionNetwork.cpp             LSDStatsTools.cpp
LSDChannel.hpp         LSDJunctionNetwork.hpp             LSDStatsTools.hpp
LSDFlowInfo.cpp        LSDMostLikelyPartitionsFinder.cpp  readme.asc
LSDFlowInfo.hpp        LSDMostLikelyPartitionsFinder.hpp  TNT
LSDIndexChannel.cpp    LSDRaster.cpp
----
+
. Okay, now go into the subfolder *Analysis_Driver*.
+
[source,console]
----
$ cd AnalysisDriver
$ ls
Drive_analysis_from_paramfile.cpp   Example.LSDTT_driver
Drive_analysis_from_paramfile.make
----
+
. The files with extensions `.cpp` and `.hpp` are pass:[C++] source code.
They are just made up of text and your computer can't do anything with them until you https://en.wikipedia.org/wiki/Compiler[compile]
them (i.e. use a program to translate them into something understood by a computer).
You don't need to understand anything about this, luckily, all you need to do is call the `make` utility:
+
[source,console]
----
$ make -f Drive_analysis_from_paramfile.make
----
+
. Once you do this you will get a bunch of warnings that you should ignore and eventually you will get a program called
`LSDTT_analysis_from_paramfile.out`:
+
[source,console]
----
$ ls
Drive_analysis_from_paramfile.cpp   Example.LSDTT_driver
Drive_analysis_from_paramfile.make  LSDTT_analysis_from_paramfile.out
Drive_analysis_from_paramfile.o
----
+
. You now have a program that will be able to calculate slope and curvature for your topographic data. The next section describes how to do so.

==== Running the curvature and slope extraction

. You should have compiled the program *LSDTT_analysis_from_paramfile.out* (see previous section).
You now need to modify a parameter file in order to tell the program where the data is and what analyses you want to perform. 
First, make a copy of the file *Example.LSDTT_driver* using the `cp` command:
+
[source,console]
----
$ cp Example.LSDTT_driver Whiteadder.LSDTT_driver
----
+
The name of this new file doesn't matter as long as you remember what name you have given it.
Open the new file in your favourite text editor (at Edinburgh you can use emacs within the terminal
or PSPad from Windows) and edit it like this:
+
.The Whiteadder.LSDTT_driver file
[source,paramfile]
----
# This is a driver file for LSDTopoTools
# Any lines with the # symbol in the first row will be ignored

# File information
dem read extension: bil
dem write extension: bil
read path: /home/HillslopeAnalysis/Example01_data/
write path: /home/HillslopeAnalysis/Example01_data/
read fname: WhiteadderDEM

# Parameters for various topographic analysis
min_slope_for_fill: 0.0001
# pixel_threshold_for_channel_net: 200
slope_method: polyfit
polyfit_window_radius: 15.1

# The different analyses to be run
write hillshade: true
write slope: true
write aspect: true
write curvature: true
write planform curvature: true
----
+
IMPORTANT: If your data is located somewhere other than `/home/HillslopeAnalysis/Example01_data/` you will need to point the code to the correct location.
+
. Now you will be in a position to run the program. You run the program by telling it where the parameter file is, and the name of the parameter file.
In this case the parameter file is in the folder */home/HillslopeAnalysis/SourceCode/LSDTopoTools_AnalysisDriver/Analysis_driver/*
and the parameter file is called *Whiteadder.LSDTT_driver*. You run the program with:
+
[source,console]
----
$ ./LSDTT_analysis_from_paramfile.out /home/HillslopeAnalysis/SourceCode/LSDTopoTools_AnalysisDriver/Analysis_driver/ Whiteadder.LSDTT_driver
----
+
NOTE: In linux systems you need a `./` in front of the program name.
+
. Now if you have been following along, you have another terminal window which is in the folder containing the data. Go there and see what is in it.
+
[source,console]
----
$ ls
Whiteadder_curvature.bil   WhiteadderDEM.hdr  Whiteadder_planform_curvature.bil
Whiteadder_curvature.hdr   WhiteadderDEM.tif  Whiteadder_planform_curvature.hdr
WhiteadderDEM.bil          Whiteadder_hs.bil  Whiteadder_slope.bil
WhiteadderDEM.bil.aux.xml  Whiteadder_hs.hdr  Whiteadder_slope.hdr
----
+
. Yay! You just made a bunch of new rasters containing slope, curvature and other stuff! Now we will move onto getting a profile out of these in ArcGIS.
